#!/usr/bin/env python3
# pytest 

from pi import PiFraction

class TestClass(object):
    def test_case1(self):
        fraction = PiFraction()
        assert fraction.min_difficulty([1, 2, 3, 4, 1, 2, 3, 4]) == 4
        assert fraction.min_difficulty([1, 1, 1, 1, 1, 2, 2, 2]) == 2
        assert fraction.min_difficulty([1, 2, 1, 2, 2, 2, 2, 2]) == 5
        assert fraction.min_difficulty([2, 2, 2, 2, 2, 2, 2, 2]) == 2
        assert fraction.min_difficulty([1, 2, 6, 7, 3, 9, 3, 9]) == 14
        """
        string = '77668272115726949518179589754693992642197915523385766231676275475703546994148929041301863861194391962838870543677743224276809132365449485366768000001065262485473055861598999140170769838548318875014293890899506854530765116803337322265175662207526951791442252808165171667766727930354851542040238174608923283917032754257508676551178593950027933895920576682789677644531840404185540104351348389531201326378369283580827193783126549617459970567450718332065034556644034490453627560011250184335607361222765949278393706478426456763388188075656121689605041611390390639601620221536849410926053876887148379895599991120991646464411918568277004574243434021672276445589330127781586869525069499364610175685060167145354315814801054588605645501332037586454858403240298717093480910556211671546848477803944756979804263180991756422809873998766973237695737015808068229045992123661689025962730430679316531149401764737693873514093361833216142802149763399189835484875625298752423873077559555955465196394401821840998412489826236737714672260616336432964063357281070788758164043814850188411431885988276944901193212968271588841338694346828590066640806314077757725705630729400492940302420498416565479736705485580445865720227637840466823379852827105784319753541795011347273625774080213476826045022851579795797647467022840999561601569108903845824502679265942055503958792298185264800'
        assert fraction.min_difficulty([int(x) for x in string]) == 2525"""

    def test_case2(self):
        fraction = PiFraction()
        assert fraction.diff([1, 1, 1,1]) == [0,0,0]
        assert fraction.diff([1, 2, 3, 4],2) == [0, 0]
        assert fraction.diff([1, 2, 3, 4]) == [1, 1, 1]
